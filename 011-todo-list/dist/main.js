(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700&display=swap);"]),i.push([n.id,"*{\n    margin: 0;\n    padding: 0;\n    font-family: 'Open Sans';\n}\n\n/* LAYOUT */\n\nbody{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    position: relative;\n}\n\nheader{\n    font-size: 3rem;\n}\n\nmain{\n    flex: 1;\n}\n\n/* CONTAINER */\n\n.container{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    background-color: black;\n    gap: 1rem;\n    width: 100%;\n    padding: 2rem;\n}\n\n.card{\n    border-radius: 10px;\n    background-color: red;\n    padding: 1rem;\n    position: relative;\n}\n\n/* TODO CARD */\n\n.project-title{\n\n}\n\n.checked{\n    color: gray;\n}\n\n.todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n}\n\n.check-button{\n\n}\n\n.todo-name{\n\n}\n\n.add-todo-button{\n    opacity: 0;\n    pointer-events: none;\n}\n\n.add-project-button{\n    position: absolute;\n    bottom: 2rem;\n    right: 2rem;\n}\n\n.checked-todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n}\n\n/* TODO FORM */\n\n.todo-form{\n    \n}\n\n/* MODAL */\n\n.modal-container{\n    display: flex;\n    background-color: rgba(0,0,0,0.6);\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n    opacity: 0;\n}\n\n.modal{\n    background-color: #64748b;\n    width: 400px;\n    padding: 40px 0 80px 0;\n    border-radius: 5px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n}\n\n.modal-text{\n    color: white;\n    padding-bottom: 1rem;\n}\n\n.close-modal{\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.show {\n    pointer-events: auto;\n    opacity: 1;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,SAAS;IACT,UAAU;IACV,wBAAwB;AAC5B;;AAEA,WAAW;;AAEX;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,OAAO;AACX;;AAEA,cAAc;;AAEd;IACI,aAAa;IACb,4DAA4D;IAC5D,uBAAuB;IACvB,SAAS;IACT,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,qBAAqB;IACrB,aAAa;IACb,kBAAkB;AACtB;;AAEA,cAAc;;AAEd;;AAEA;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,WAAW;IACX,cAAc;AAClB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;IACI,UAAU;IACV,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,WAAW;IACX,cAAc;AAClB;;AAEA,cAAc;;AAEd;;AAEA;;AAEA,UAAU;;AAEV;IACI,aAAa;IACb,iCAAiC;IACjC,mBAAmB;IACnB,uBAAuB;IACvB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,oBAAoB;IACpB,UAAU;AACd;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;IAClB,wCAAwC;IACxC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,WAAW;IACX,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,oBAAoB;IACpB,UAAU;AACd",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700&display=swap');\n\n*{\n    margin: 0;\n    padding: 0;\n    font-family: 'Open Sans';\n}\n\n/* LAYOUT */\n\nbody{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    position: relative;\n}\n\nheader{\n    font-size: 3rem;\n}\n\nmain{\n    flex: 1;\n}\n\n/* CONTAINER */\n\n.container{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    background-color: black;\n    gap: 1rem;\n    width: 100%;\n    padding: 2rem;\n}\n\n.card{\n    border-radius: 10px;\n    background-color: red;\n    padding: 1rem;\n    position: relative;\n}\n\n/* TODO CARD */\n\n.project-title{\n\n}\n\n.checked{\n    color: gray;\n}\n\n.todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n}\n\n.check-button{\n\n}\n\n.todo-name{\n\n}\n\n.add-todo-button{\n    opacity: 0;\n    pointer-events: none;\n}\n\n.add-project-button{\n    position: absolute;\n    bottom: 2rem;\n    right: 2rem;\n}\n\n.checked-todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n}\n\n/* TODO FORM */\n\n.todo-form{\n    \n}\n\n/* MODAL */\n\n.modal-container{\n    display: flex;\n    background-color: rgba(0,0,0,0.6);\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n    opacity: 0;\n}\n\n.modal{\n    background-color: #64748b;\n    width: 400px;\n    padding: 40px 0 80px 0;\n    border-radius: 5px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n}\n\n.modal-text{\n    color: white;\n    padding-bottom: 1rem;\n}\n\n.close-modal{\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.show {\n    pointer-events: auto;\n    opacity: 1;\n}"],sourceRoot:""}]);const d=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);o&&i[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],d=0;d<n.length;d++){var c=n[d],s=o.base?c[0]+o.base:c[0],A=r[s]||0,l="".concat(s," ").concat(A);r[s]=A+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,o);o.byIndex=d,e.splice(d,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var d=t(r[i]);e[d].references--}for(var c=o(n,a),s=0;s<r.length;s++){var A=t(r[s]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e);var o={};(()=>{t.d(o,{$L:()=>y,JV:()=>I,n1:()=>B});var n=t(379),e=t.n(n),a=t(795),r=t.n(a),i=t(569),d=t.n(i),c=t(565),s=t.n(c),A=t(216),l=t.n(A),p=t(589),u=t.n(p),m=t(426),C={};C.styleTagTransform=u(),C.setAttributes=s(),C.insert=d().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=l(),e()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;const h=(n,e,t,o)=>{const a=!1;return{getTitle:()=>n,getDescription:()=>e,getDate:()=>t,getPriority:()=>o,getState:()=>a,setDone:()=>a=!1,title:n,description:e}},f=n=>{let e=[],t=[];return{getTitle:()=>n,addTodo:n=>e.push(n),getTodoList:()=>e,getCheckedList:()=>t,checkTodo:n=>{const o=e.findIndex((e=>e.getTitle()==n)),a=e[o];e.splice(o,1),t.push(a),console.log(e),console.log(t)},_todoList:e,_checkedList:t}},g=(()=>{const n=document.createElement("header"),e=document.createElement("main"),t=document.createElement("div");t.classList.add("container");const o=document.createElement("footer"),a=document.createElement("div");a.classList.add("modal-container");const r=n=>{const e=document.createElement("div");e.classList.add("card");const o=document.createElement("h2");o.classList.add("project-title"),o.textContent=n.getTitle(),e.appendChild(o);const a=document.createElement("div");a.classList.add("todos-list"),e.appendChild(a);const r=document.createElement("div");r.classList.add("form-container"),e.appendChild(r);const c=document.createElement("button");c.classList.add("material-icons","add-todo-button","show"),c.textContent="add",c.addEventListener("click",(()=>{c.classList.remove("show"),r.appendChild(((n,e)=>{const t=document.createElement("div");t.classList.add("todo-form");const o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("placeholder","New todo ..."),o.setAttribute("required",!0),t.appendChild(o);const a=document.createElement("button");a.classList.add("material-icons"),a.textContent="check_circle",a.addEventListener("click",(()=>{const t=I(o.value,e);i(n,t,e),n.parentNode.querySelector(".form-container").textContent="",n.parentNode.querySelector(".add-todo-button").classList.add("show")})),t.appendChild(a);const r=document.createElement("button");return r.classList.add("material-icons"),r.textContent="cancel",r.addEventListener("click",(()=>{n.parentNode.querySelector(".form-container").textContent="",n.parentNode.querySelector(".add-todo-button").classList.add("show")})),t.appendChild(r),t})(a,n.getTitle()))})),e.appendChild(c);const s=document.createElement("div");s.classList.add("checked-todos-list"),e.appendChild(s),t.appendChild(e),n.getTodoList().forEach((e=>{i(a,e,n.getTitle())}));const A=n.getCheckedList();console.log(A),A.forEach((n=>{d(s,n)}))},i=(n,e,t)=>{const o=document.createElement("div");o.classList.add("todo");const a=document.createElement("span");a.classList.add("material-icons","check-button"),a.textContent="radio_button_unchecked",a.addEventListener("click",(()=>{B(e.getTitle(),t),n.removeChild(o);const a=n.parentNode.querySelector(".checked-todos-list");d(a,e)})),o.appendChild(a);const r=document.createElement("div");r.classList.add("todo-name"),r.textContent=e.getTitle(),o.appendChild(r),n.appendChild(o)},d=(n,e)=>{const t=document.createElement("div");t.classList.add("checked-todo");const o=document.createElement("span");o.classList.add("material-icons","checked-button"),o.textContent="radio_button_checked",t.appendChild(o);const a=document.createElement("div");a.classList.add("checked.todo-name"),a.textContent=e.getTitle(),t.appendChild(a),n.appendChild(t)};return{initialDisplay:()=>{n.textContent="Todo List",document.body.appendChild(n),document.body.appendChild(e),e.appendChild(t),o.textContent="By JorgeLg3 - code here!",document.body.appendChild(o),a.appendChild((()=>{const n=document.createElement("div");n.classList.add("modal");const e=document.createElement("h2");e.classList.add("modal-text"),e.textContent="New Todo List",n.appendChild(e);const t=document.createElement("button");t.classList.add("close-modal","material-icons"),t.textContent="close",t.addEventListener("click",(()=>a.classList.remove("show"))),n.appendChild(t);const o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("placeholder","List Name"),o.setAttribute("required",!0),n.appendChild(o);const i=document.createElement("button");return i.textContent="Create",i.addEventListener("click",(()=>{const n=y(o.value);r(n),a.classList.remove("show")})),n.appendChild(i),n})()),document.body.appendChild(a);const i=document.createElement("button");i.classList.add("material-icons","add-project-button"),i.textContent="post_add",i.addEventListener("click",(()=>{a.classList.add("show")})),e.appendChild(i)},displayProject:r,displayTodo:i}})(),b=document.createElement("link");b.rel="stylesheet",b.href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined",document.head.appendChild(b),g.initialDisplay();let v=[];function I(n,e){const t=v.findIndex((n=>n.getTitle()==e)),o=h(n);return v[t].addTodo(o),o}function y(n){const e=f(n);return v.push(e),e}function B(n,e){const t=v.findIndex((n=>n.getTitle()==e));v[t].checkTodo(n)}v.push(function(){const n=h("This is an important task"),e=h("Another important task","todo2 description","tomorrow",1),t=h("Less important task","todo3 description","tomorrow",1),o=h("Task already done"),a=f("Default Todo List");return a.addTodo(n),a.addTodo(e),a.addTodo(t),a.addTodo(o),a.checkTodo("Task already done"),a}()),g.displayProject(v[0])})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,