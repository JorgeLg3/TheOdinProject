(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700&display=swap);"]),i.push([n.id,"*{\n    margin: 0;\n    padding: 0;\n    font-family: 'Open Sans';\n}\n\n:root{\n    --color1: #93c5fd;\n    --color2: #e0f2fe;\n    --color3: #eff6ff;\n    --color4: #3b82f6;\n    --textColor1: #000000;\n    --textColor2: #cbd5e1;\n}\n\n/* LAYOUT */\n\nbody{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    position: relative;\n    background-color: var(--color2);\n}\n\nheader{\n    background-color: var(--color1);\n    width: 100vw;\n    padding: 0.5rem 5rem;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.title{\n    font-size: 1.5rem;\n    margin-left: 5rem;\n}\n\nmain{\n    flex: 1;\n}\n\n.add-project-button{\n    position: absolute;\n    bottom: 2rem;\n    right: 2rem;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    border: none;\n    background-color: var(--color1);\n    width: 3rem;\n    height: 3rem;\n    color: var(--color3);\n    border-radius: 25%;\n    cursor: pointer;\n}\n\n/* CONTAINER */\n\n.container{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 1rem;\n    padding: 2rem;\n    width: 90vw;\n}\n\n.card{\n    border-radius: 10px;\n    background-color: var(--color3);\n    padding: 1rem;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    box-shadow: 0px 5px 6px rgba(0, 0, 0, 0.2);\n}\n\n/* TODO CARD */\n\n.project-title{\n\n}\n\n.todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n}\n\n.check-button{\n    font-size: 24px;\n    cursor: pointer;\n}\n\n.todo-name{\n    font-size: 1rem;\n}\n\n.add-todo-button{\n    opacity: 0;\n    pointer-events: none;\n    background: none;\n    border: none;\n    justify-self: center;\n    cursor: pointer;\n    color: var(--color4);\n    font-size: 32px;\n    padding: 1rem;\n}\n\n/* CHECKED TODO LIST */\n\n.checked-todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n    color: var(--textColor2);\n}\n\n.checked-todo-name{\n    text-decoration: line-through;\n    font-size: 0.9rem;\n}\n\n.checked-buttom{\n    font-size: 18px;\n}\n\n/* TODO FORM */\n\n.todo-form{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 4px;\n}\n\n.todo-input{\n    background: none;\n    border: none;\n    border-bottom: solid 1px black;\n    width: 60%;\n    margin-left: 4px;\n    padding: 3px;\n}\n\n.todo-input:focus{\n    background: none;\n    border: none;\n}\n\n.todo-form-button{\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.confirm{\n    color: #65a30d;\n}\n\n.deny{\n    color: #ef4444;\n}\n\n/* MODAL */\n\n.modal-container{\n    display: flex;\n    background-color: rgba(0,0,0,0.6);\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n    opacity: 0;\n}\n\n.modal{\n    background-color: #64748b;\n    width: 400px;\n    padding: 40px 0 80px 0;\n    border-radius: 5px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n}\n\n.modal-text{\n    color: white;\n    padding-bottom: 1rem;\n}\n\n.close-modal{\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.show {\n    pointer-events: auto;\n    opacity: 1;\n}\n\n.project-input{\n    padding: 4px 8px;\n    border-radius: 4px;\n    border: none;\n}\n\n.project-button{\n    cursor: pointer;\n    margin-top: 2rem;\n    border: none;\n    background-color: var(--color1);\n    color: var(--color3);\n    padding: 0.4rem 1rem;\n    border-radius: 5px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,SAAS;IACT,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;IACrB,qBAAqB;AACzB;;AAEA,WAAW;;AAEX;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,kBAAkB;IAClB,+BAA+B;AACnC;;AAEA;IACI,+BAA+B;IAC/B,YAAY;IACZ,oBAAoB;IACpB,wCAAwC;IACxC,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;IACX,wCAAwC;IACxC,YAAY;IACZ,+BAA+B;IAC/B,WAAW;IACX,YAAY;IACZ,oBAAoB;IACpB,kBAAkB;IAClB,eAAe;AACnB;;AAEA,cAAc;;AAEd;IACI,aAAa;IACb,4DAA4D;IAC5D,SAAS;IACT,aAAa;IACb,WAAW;AACf;;AAEA;IACI,mBAAmB;IACnB,+BAA+B;IAC/B,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,0CAA0C;AAC9C;;AAEA,cAAc;;AAEd;;AAEA;;AAEA;IACI,aAAa;IACb,WAAW;IACX,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;IACZ,oBAAoB;IACpB,eAAe;IACf,oBAAoB;IACpB,eAAe;IACf,aAAa;AACjB;;AAEA,sBAAsB;;AAEtB;IACI,aAAa;IACb,WAAW;IACX,cAAc;IACd,wBAAwB;AAC5B;;AAEA;IACI,6BAA6B;IAC7B,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA,cAAc;;AAEd;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,QAAQ;AACZ;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,8BAA8B;IAC9B,UAAU;IACV,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA,UAAU;;AAEV;IACI,aAAa;IACb,iCAAiC;IACjC,mBAAmB;IACnB,uBAAuB;IACvB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,oBAAoB;IACpB,UAAU;AACd;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;IAClB,wCAAwC;IACxC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,WAAW;IACX,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,oBAAoB;IACpB,UAAU;AACd;;AAEA;IACI,gBAAgB;IAChB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,YAAY;IACZ,+BAA+B;IAC/B,oBAAoB;IACpB,oBAAoB;IACpB,kBAAkB;AACtB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700&display=swap');\n\n*{\n    margin: 0;\n    padding: 0;\n    font-family: 'Open Sans';\n}\n\n:root{\n    --color1: #93c5fd;\n    --color2: #e0f2fe;\n    --color3: #eff6ff;\n    --color4: #3b82f6;\n    --textColor1: #000000;\n    --textColor2: #cbd5e1;\n}\n\n/* LAYOUT */\n\nbody{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    position: relative;\n    background-color: var(--color2);\n}\n\nheader{\n    background-color: var(--color1);\n    width: 100vw;\n    padding: 0.5rem 5rem;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.title{\n    font-size: 1.5rem;\n    margin-left: 5rem;\n}\n\nmain{\n    flex: 1;\n}\n\n.add-project-button{\n    position: absolute;\n    bottom: 2rem;\n    right: 2rem;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    border: none;\n    background-color: var(--color1);\n    width: 3rem;\n    height: 3rem;\n    color: var(--color3);\n    border-radius: 25%;\n    cursor: pointer;\n}\n\n/* CONTAINER */\n\n.container{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 1rem;\n    padding: 2rem;\n    width: 90vw;\n}\n\n.card{\n    border-radius: 10px;\n    background-color: var(--color3);\n    padding: 1rem;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    box-shadow: 0px 5px 6px rgba(0, 0, 0, 0.2);\n}\n\n/* TODO CARD */\n\n.project-title{\n\n}\n\n.todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n}\n\n.check-button{\n    font-size: 24px;\n    cursor: pointer;\n}\n\n.todo-name{\n    font-size: 1rem;\n}\n\n.add-todo-button{\n    opacity: 0;\n    pointer-events: none;\n    background: none;\n    border: none;\n    justify-self: center;\n    cursor: pointer;\n    color: var(--color4);\n    font-size: 32px;\n    padding: 1rem;\n}\n\n/* CHECKED TODO LIST */\n\n.checked-todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n    color: var(--textColor2);\n}\n\n.checked-todo-name{\n    text-decoration: line-through;\n    font-size: 0.9rem;\n}\n\n.checked-buttom{\n    font-size: 18px;\n}\n\n/* TODO FORM */\n\n.todo-form{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 4px;\n}\n\n.todo-input{\n    background: none;\n    border: none;\n    border-bottom: solid 1px black;\n    width: 60%;\n    margin-left: 4px;\n    padding: 3px;\n}\n\n.todo-input:focus{\n    background: none;\n    border: none;\n}\n\n.todo-form-button{\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.confirm{\n    color: #65a30d;\n}\n\n.deny{\n    color: #ef4444;\n}\n\n/* MODAL */\n\n.modal-container{\n    display: flex;\n    background-color: rgba(0,0,0,0.6);\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n    opacity: 0;\n}\n\n.modal{\n    background-color: #64748b;\n    width: 400px;\n    padding: 40px 0 80px 0;\n    border-radius: 5px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n}\n\n.modal-text{\n    color: white;\n    padding-bottom: 1rem;\n}\n\n.close-modal{\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.show {\n    pointer-events: auto;\n    opacity: 1;\n}\n\n.project-input{\n    padding: 4px 8px;\n    border-radius: 4px;\n    border: none;\n}\n\n.project-button{\n    cursor: pointer;\n    margin-top: 2rem;\n    border: none;\n    background-color: var(--color1);\n    color: var(--color3);\n    padding: 0.4rem 1rem;\n    border-radius: 5px;\n}"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var d=n[c],A=o.base?d[0]+o.base:d[0],s=a[A]||0,l="".concat(A," ").concat(s);a[A]=s+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var d=o(n,r),A=0;A<a.length;A++){var s=t(a[A]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e);var o={};(()=>{t.d(o,{$L:()=>x,JV:()=>b,n1:()=>v});var n=t(379),e=t.n(n),r=t(795),a=t.n(r),i=t(569),c=t.n(i),d=t(565),A=t.n(d),s=t(216),l=t.n(s),p=t(589),u=t.n(p),m=t(426),C={};C.styleTagTransform=u(),C.setAttributes=A(),C.insert=c().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=l(),e()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;const B=(n,e,t,o)=>{const r=!1;return{getTitle:()=>n,getDescription:()=>e,getDate:()=>t,getPriority:()=>o,getState:()=>r,setDone:()=>r=!1,title:n,description:e}},f=n=>{let e=[],t=[];return{getTitle:()=>n,addTodo:n=>e.push(n),addCheckTodo:n=>t.push(n),getTodoList:()=>e,getCheckedList:()=>t,checkTodo:n=>{const o=e.findIndex((e=>e.getTitle()==n)),r=e[o];e.splice(o,1),t.push(r),console.log(e),console.log(t)},_todoList:e,_checkedList:t}},h=(()=>{const n=document.createElement("header"),e=document.createElement("main"),t=document.createElement("div");t.classList.add("container");const o=document.createElement("footer"),r=document.createElement("div");r.classList.add("modal-container");const a=n=>{const e=document.createElement("div");e.classList.add("card");const o=document.createElement("h2");o.classList.add("project-title"),o.textContent=n.getTitle(),e.appendChild(o);const r=document.createElement("div");r.classList.add("todos-list"),e.appendChild(r);const a=document.createElement("div");a.classList.add("form-container"),e.appendChild(a);const d=document.createElement("div");d.classList.add("checked-todos-list"),e.appendChild(d);const A=document.createElement("button");A.classList.add("material-icons","add-todo-button","show"),A.textContent="add",A.addEventListener("click",(()=>{A.classList.remove("show"),a.appendChild(((n,e)=>{const t=document.createElement("div");t.classList.add("todo-form");const o=document.createElement("input");o.classList.add("todo-input"),o.setAttribute("type","text"),o.setAttribute("placeholder","New todo ..."),o.setAttribute("required",!0),t.appendChild(o);const r=document.createElement("button");r.classList.add("material-icons","todo-form-button","confirm"),r.textContent="check_circle",r.addEventListener("click",(()=>{const t=b(o.value,e);i(n,t,e),n.parentNode.querySelector(".form-container").textContent="",n.parentNode.querySelector(".add-todo-button").classList.add("show")})),t.appendChild(r);const a=document.createElement("button");return a.classList.add("material-icons","todo-form-button","deny"),a.textContent="cancel",a.addEventListener("click",(()=>{n.parentNode.querySelector(".form-container").textContent="",n.parentNode.querySelector(".add-todo-button").classList.add("show")})),t.appendChild(a),t})(r,n.getTitle()))})),e.appendChild(A),t.appendChild(e),n.getTodoList().forEach((e=>{i(r,e,n.getTitle())}));const s=n.getCheckedList();console.log(s),s.forEach((n=>{c(d,n)}))},i=(n,e,t)=>{const o=document.createElement("div");o.classList.add("todo");const r=document.createElement("span");r.classList.add("material-icons","check-button"),r.textContent="radio_button_unchecked",r.addEventListener("click",(()=>{v(e.getTitle(),t),n.removeChild(o);const r=n.parentNode.querySelector(".checked-todos-list");c(r,e)})),o.appendChild(r);const a=document.createElement("div");a.classList.add("todo-name"),a.textContent=e.getTitle(),o.appendChild(a),n.appendChild(o)},c=(n,e)=>{const t=document.createElement("div");t.classList.add("checked-todo");const o=document.createElement("span");o.classList.add("material-icons","checked-button"),o.textContent="radio_button_checked",t.appendChild(o);const r=document.createElement("div");r.classList.add("checked-todo-name"),r.textContent=e.getTitle(),t.appendChild(r),n.appendChild(t)};return{initialDisplay:()=>{const i=document.createElement("h1");i.classList.add("title"),i.textContent="TODO LIST",n.appendChild(i);const c=document.createElement("span");c.classList.add("material-icons"),c.textContent="checklist",n.appendChild(c),document.body.appendChild(n),document.body.appendChild(e),e.appendChild(t),o.textContent="By JorgeLg3 - code here!",document.body.appendChild(o),r.appendChild((()=>{const n=document.createElement("div");n.classList.add("modal");const e=document.createElement("h2");e.classList.add("modal-text"),e.textContent="New Todo List",n.appendChild(e);const t=document.createElement("button");t.classList.add("close-modal","material-icons"),t.textContent="close",t.addEventListener("click",(()=>r.classList.remove("show"))),n.appendChild(t);const o=document.createElement("input");o.classList.add("project-input"),o.setAttribute("type","text"),o.setAttribute("placeholder","List Name"),o.setAttribute("required",!0),n.appendChild(o);const i=document.createElement("button");return i.classList.add("project-button"),i.textContent="Create",i.addEventListener("click",(()=>{const n=x(o.value);a(n),r.classList.remove("show")})),n.appendChild(i),n})()),document.body.appendChild(r);const d=document.createElement("button");d.classList.add("material-icons","add-project-button"),d.textContent="post_add",d.addEventListener("click",(()=>{r.classList.add("show")})),e.appendChild(d)},displayProject:a,displayTodo:i}})(),g=document.createElement("link");g.rel="stylesheet",g.href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined",document.head.appendChild(g),h.initialDisplay();let I=[];function b(n,e){const t=I.findIndex((n=>n.getTitle()==e)),o=B(n);return I[t].addTodo(o),y(I),o}function x(n){const e=f(n);return I.push(e),y(I),e}function v(n,e){const t=I.findIndex((n=>n.getTitle()==e));I[t].checkTodo(n),y(I)}function y(n){let e=[];n.forEach((n=>{let t=[];n.getTodoList().forEach((n=>{const e={title:n.getTitle(),description:n.getDescription(),date:n.getDate(),priority:n.getPriority()};t.push(e)}));let o=[];n.getCheckedList().forEach((n=>{const e={title:n.getTitle(),description:n.getDescription(),date:n.getDate(),priority:n.getPriority()};o.push(e)}));let r={title:n.getTitle(),todoList:t,checkList:o};e.push(r)})),localStorage.setItem("projectList",JSON.stringify(e)),console.log(e)}localStorage.getItem("projectList")?(console.log(localStorage.getItem("projectList")),I=function(){let n=[];return JSON.parse(localStorage.getItem("projectList")).forEach((e=>{const t=f(e.title);e.todoList.forEach((n=>{const e=B(n.title,n.description,n.date,n.priority);t.addTodo(e)})),e.checkList.forEach((n=>{const e=B(n.title,n.description,n.date,n.priority);t.addCheckTodo(e)})),n.push(t)})),n}(),I.forEach((n=>{h.displayProject(n)}))):(I.push(function(){const n=B("This is an important task"),e=B("Another important task","todo2 description","tomorrow",1),t=B("Less important task","todo3 description","tomorrow",1),o=B("Task already done"),r=f("Default Todo List");return r.addTodo(n),r.addTodo(e),r.addTodo(t),r.addTodo(o),r.checkTodo("Task already done"),r}()),h.displayProject(I[0]))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,