(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>d});var o=e(537),a=e.n(o),r=e(645),i=e.n(r)()(a());i.push([n.id,"*{\n    margin: 0;\n    padding: 0;\n}\n\n/* LAYOUT */\n\nbody{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    position: relative;\n}\n\nheader{\n    font-size: 3rem;\n}\n\nmain{\n    flex: 1;\n}\n\n/* CONTAINER */\n\n.container{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    background-color: black;\n    gap: 1rem;\n    width: 100%;\n    padding: 2rem;\n}\n\n.card{\n    border-radius: 10px;\n    background-color: red;\n    padding: 1rem;\n    position: relative;\n}\n\n/* TODO CARD */\n\n.project-title{\n\n}\n\n.todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n}\n\n.check-button{\n\n}\n\n.todo-name{\n\n}\n\n.add-todo-button{\n    opacity: 0;\n    pointer-events: none;\n}\n\n.add-project-button{\n    position: absolute;\n    bottom: 2rem;\n    right: 2rem;\n}\n\n/* TODO FORM */\n\n.todo-form{\n    \n}\n\n/* MODAL */\n\n.modal-container{\n    display: flex;\n    background-color: rgba(0,0,0,0.6);\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n    opacity: 0;\n}\n\n.modal{\n    background-color: #64748b;\n    width: 400px;\n    padding: 40px 0 80px 0;\n    border-radius: 5px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n}\n\n.modal-text{\n    color: white;\n    padding-bottom: 1rem;\n}\n\n.close-modal{\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.show {\n    pointer-events: auto;\n    opacity: 1;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA,WAAW;;AAEX;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,OAAO;AACX;;AAEA,cAAc;;AAEd;IACI,aAAa;IACb,4DAA4D;IAC5D,uBAAuB;IACvB,SAAS;IACT,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,qBAAqB;IACrB,aAAa;IACb,kBAAkB;AACtB;;AAEA,cAAc;;AAEd;;AAEA;;AAEA;IACI,aAAa;IACb,WAAW;IACX,cAAc;AAClB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;IACI,UAAU;IACV,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;AACf;;AAEA,cAAc;;AAEd;;AAEA;;AAEA,UAAU;;AAEV;IACI,aAAa;IACb,iCAAiC;IACjC,mBAAmB;IACnB,uBAAuB;IACvB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,oBAAoB;IACpB,UAAU;AACd;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;IAClB,wCAAwC;IACxC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,WAAW;IACX,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,oBAAoB;IACpB,UAAU;AACd",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n}\n\n/* LAYOUT */\n\nbody{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    position: relative;\n}\n\nheader{\n    font-size: 3rem;\n}\n\nmain{\n    flex: 1;\n}\n\n/* CONTAINER */\n\n.container{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    background-color: black;\n    gap: 1rem;\n    width: 100%;\n    padding: 2rem;\n}\n\n.card{\n    border-radius: 10px;\n    background-color: red;\n    padding: 1rem;\n    position: relative;\n}\n\n/* TODO CARD */\n\n.project-title{\n\n}\n\n.todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n}\n\n.check-button{\n\n}\n\n.todo-name{\n\n}\n\n.add-todo-button{\n    opacity: 0;\n    pointer-events: none;\n}\n\n.add-project-button{\n    position: absolute;\n    bottom: 2rem;\n    right: 2rem;\n}\n\n/* TODO FORM */\n\n.todo-form{\n    \n}\n\n/* MODAL */\n\n.modal-container{\n    display: flex;\n    background-color: rgba(0,0,0,0.6);\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n    opacity: 0;\n}\n\n.modal{\n    background-color: #64748b;\n    width: 400px;\n    padding: 40px 0 80px 0;\n    border-radius: 5px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n}\n\n.modal-text{\n    color: white;\n    padding-bottom: 1rem;\n}\n\n.close-modal{\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.show {\n    pointer-events: auto;\n    opacity: 1;\n}"],sourceRoot:""}]);const d=i},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);o&&i[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),t.push(A))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(i).concat([r]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var r={},i=[],d=0;d<n.length;d++){var c=n[d],s=o.base?c[0]+o.base:c[0],A=r[s]||0,l="".concat(s," ").concat(A);r[s]=A+1;var p=e(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=a(u,o);o.byIndex=d,t.splice(d,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function a(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var d=e(r[i]);t[d].references--}for(var c=o(n,a),s=0;s<r.length;s++){var A=e(r[s]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}r=c}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,a&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={id:o,exports:{}};return n[o](r,r.exports,e),r.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t);var o={};(()=>{e.d(o,{$:()=>B,J:()=>I});var n=e(379),t=e.n(n),a=e(795),r=e.n(a),i=e(569),d=e.n(i),c=e(565),s=e.n(c),A=e(216),l=e.n(A),p=e(589),u=e.n(p),m=e(426),C={};C.styleTagTransform=u(),C.setAttributes=s(),C.insert=d().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=l(),t()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;const f=(n,t,e,o)=>{const a=!1;return{getTitle:()=>n,getDescription:()=>t,getDate:()=>e,getPriority:()=>o,getState:()=>a,setDone:()=>a=!1,title:n,description:t}},h=n=>{let t=[];return{getTitle:()=>n,addTodo:n=>t.push(n),getTodoList:()=>t,_todoList:t}},b=(()=>{const n=document.createElement("header"),t=document.createElement("main"),e=document.createElement("div");e.classList.add("container");const o=document.createElement("footer"),a=document.createElement("div");a.classList.add("modal-container");const r=n=>{const t=document.createElement("div");t.classList.add("card");const o=document.createElement("h2");o.classList.add("project-title"),o.textContent=n.getTitle(),t.appendChild(o);const a=document.createElement("div");a.classList.add("todos-list"),t.appendChild(a);const r=document.createElement("div");r.classList.add("form-container"),t.appendChild(r);const d=document.createElement("button");d.classList.add("material-icons","add-todo-button","show"),d.textContent="add",d.addEventListener("click",(()=>{d.classList.remove("show"),r.appendChild(((n,t)=>{const e=document.createElement("div");e.classList.add("todo-form");const o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("placeholder","New todo ..."),o.setAttribute("required",!0),e.appendChild(o);const a=document.createElement("button");return a.classList.add("material-icons"),a.textContent="check_circle",a.addEventListener("click",(()=>{const e=I(o.value,t);i(n,e),n.parentNode.querySelector(".form-container").textContent="",n.parentNode.querySelector(".add-todo-button").classList.add("show")})),e.appendChild(a),e})(a,n.getTitle()))})),t.appendChild(d),e.appendChild(t),n.getTodoList().forEach((n=>{i(a,n)}))},i=(n,t)=>{const e=document.createElement("div");e.classList.add("todo");const o=document.createElement("span");o.classList.add("material-icons","check-button"),o.textContent="radio_button_unchecked",e.appendChild(o);const a=document.createElement("div");a.classList.add("todo-name"),a.textContent=t.getTitle(),e.appendChild(a),n.appendChild(e)};return{initialDisplay:()=>{n.textContent="Todo List",document.body.appendChild(n),document.body.appendChild(t),t.appendChild(e),o.textContent="By JorgeLg3 - code here!",document.body.appendChild(o),a.appendChild((()=>{const n=document.createElement("div");n.classList.add("modal");const t=document.createElement("h2");t.classList.add("modal-text"),t.textContent="New Todo List",n.appendChild(t);const e=document.createElement("button");e.classList.add("close-modal","material-icons"),e.textContent="close",e.addEventListener("click",(()=>a.classList.remove("show"))),n.appendChild(e);const o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("placeholder","List Name"),o.setAttribute("required",!0),n.appendChild(o);const i=document.createElement("button");return i.textContent="Create",i.addEventListener("click",(()=>{const n=B(o.value);r(n),a.classList.remove("show")})),n.appendChild(i),n})()),document.body.appendChild(a);const i=document.createElement("button");i.classList.add("material-icons","add-project-button"),i.textContent="post_add",i.addEventListener("click",(()=>{a.classList.add("show")})),t.appendChild(i)},displayProject:r,displayTodo:i}})(),g=document.createElement("link");g.rel="stylesheet",g.href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined",document.head.appendChild(g),b.initialDisplay();let v=[];function I(n,t){const e=v.findIndex((n=>n.getTitle()==t)),o=f(n);return v[e].addTodo(o),o}function B(n){const t=h(n);return v.push(t),t}v.push(function(){const n=f("todo1"),t=f("todo2","todo2 description","tomorrow",1),e=f("todo3","todo3 description","tomorrow",1),o=h("project1");return o.addTodo(n),o.addTodo(t),o.addTodo(e),console.log("initialization"),o}()),b.displayProject(v[0])})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,