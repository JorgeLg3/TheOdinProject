(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"*{\n    margin: 0;\n    padding: 0;\n}\n\n/* LAYOUT */\n\nbody{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n}\n\nheader{\n    font-size: 3rem;\n}\n\nmain{\n    flex: 1;\n}\n\n/* CONTAINER */\n\n.container{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    background-color: black;\n    gap: 1rem;\n    width: 100%;\n    padding: 2rem;\n}\n\n.card{\n    border-radius: 10px;\n    background-color: red;\n    padding: 1rem;\n}\n\n/* TODO CARD */\n\n.project-title{\n\n}\n\n.todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n}\n\n.check-button{\n\n}\n\n.todo-name{\n\n}\n\n.add-todo-button{\n\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA,WAAW;;AAEX;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,OAAO;AACX;;AAEA,cAAc;;AAEd;IACI,aAAa;IACb,4DAA4D;IAC5D,uBAAuB;IACvB,SAAS;IACT,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,qBAAqB;IACrB,aAAa;AACjB;;AAEA,cAAc;;AAEd;;AAEA;;AAEA;IACI,aAAa;IACb,WAAW;IACX,cAAc;AAClB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n}\n\n/* LAYOUT */\n\nbody{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n}\n\nheader{\n    font-size: 3rem;\n}\n\nmain{\n    flex: 1;\n}\n\n/* CONTAINER */\n\n.container{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    background-color: black;\n    gap: 1rem;\n    width: 100%;\n    padding: 2rem;\n}\n\n.card{\n    border-radius: 10px;\n    background-color: red;\n    padding: 1rem;\n}\n\n/* TODO CARD */\n\n.project-title{\n\n}\n\n.todo{\n    display: flex;\n    gap: 0.8rem;\n    margin: 0.5rem;\n}\n\n.check-button{\n\n}\n\n.todo-name{\n\n}\n\n.add-todo-button{\n\n}"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var d=n[c],s=o.base?d[0]+o.base:d[0],l=a[s]||0,u="".concat(s," ").concat(l);a[s]=l+1;var p=t(u),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(A);else{var m=r(A,o);o.byIndex=c,e.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var d=o(n,r),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e);var o={};(()=>{t.d(o,{Z:()=>y});var n=t(379),e=t.n(n),r=t(795),a=t.n(r),i=t(569),c=t.n(i),d=t(565),s=t.n(d),l=t(216),u=t.n(l),p=t(589),A=t.n(p),m=t(426),f={};f.styleTagTransform=A(),f.setAttributes=s(),f.insert=c().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=u(),e()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const h=(n,e,t,o)=>{const r=!1;return{getTitle:()=>n,getDescription:()=>e,getDate:()=>t,getPriority:()=>o,getState:()=>r,setDone:()=>r=!1,title:n,description:e}},g=(()=>{const n=document.createElement("header"),e=document.createElement("main"),t=document.createElement("div");t.classList.add("container");const o=document.createElement("footer"),r=n=>{const e=document.createElement("div");e.classList.add("todo");const t=document.createElement("span");t.classList.add("material-icons","check-button"),t.textContent="radio_button_unchecked",e.appendChild(t);const o=document.createElement("div");o.classList.add("todo-name"),o.textContent=n.getTitle(),e.appendChild(o),document.querySelector(".todos-list").appendChild(e)};return{initialDisplay:()=>{n.textContent="Todo List",document.body.appendChild(n),document.body.appendChild(e),e.appendChild(t),o.textContent="By JorgeLg3 - code here!",document.body.appendChild(o)},displayProject:n=>{const e=document.createElement("div");e.classList.add("card");const o=document.createElement("h2");o.classList.add("project-title"),o.textContent=n.getTitle(),e.appendChild(o);const a=document.createElement("div");a.classList.add("todos-list"),e.appendChild(a);const i=document.createElement("button");i.classList.add("material-icons","add-todo-button"),i.textContent="add",i.addEventListener("click",(()=>{const e=y("new todo",n.getTitle());r(e)})),e.appendChild(i),t.appendChild(e),n.getTodoList().forEach((n=>{r(n)}))},displayTodo:r}})(),v=document.createElement("link");v.rel="stylesheet",v.href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined",document.head.appendChild(v),g.initialDisplay();let C=[];C.push(function(){const n=h("todo1"),e=h("todo2","todo2 description","tomorrow",1),t=h("todo3","todo3 description","tomorrow",1),o=(n=>{let e=[];return{getTitle:()=>"project1",addTodo:n=>e.push(n),getTodoList:()=>e,_todoList:e}})();return o.addTodo(n),o.addTodo(e),o.addTodo(t),console.log("initialization"),o}()),g.displayProject(C[0]),g.displayTodo(h("todo"));const y=function(n,e){const t=C.findIndex((n=>n.getTitle()==e)),o=h(n);return C[t].addTodo(o),o}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,